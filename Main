
repeat wait() 
    if game:IsLoaded() and getgenv().supportedStatus == nil then
            getgenv().supportedStatus = 'UnSupported'
    end
    until game:IsLoaded() and getgenv().supportedStatus ~= nil 

local players = game:GetService("Players");
local workspace = game:GetService("Workspace");
local espValue = false
local plr = game.Players.LocalPlayer
local chr = plr.Character
local hum = chr:WaitForChild('Humanoid')
local hrp = chr:WaitForChild('HumanoidRootPart')
local rs = game:GetService('RunService')
local uis = game:GetService('UserInputService')
local vim = game:GetService('VirtualInputManager')
local ts = game:GetService('TweenService')
local gameName = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name
local mouse = plr:GetMouse()
local CurrentSpec;
local PositionSet;
local r,g,b = 1,1,1
local Camera = workspace.Camera;
local CC = workspace.CurrentCamera;
local wtvp = CC.worldToViewportPoint;

local MainBackgrounds = {}
local PlayerListHolder = {}
local Sliders = {}
local ESPs = {}

local EspTypes = {
    
    Box = false;
    HealthBar = false;
    Distance = false;
    
}

function randomString(length)
	local length = length or 20
	local stringVars = {'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z','1','2','3','4','5','6','7','8','9','0'}
	local str = ''

	for i=1,length do
		local selected = stringVars[math.random(1,#stringVars)]
		if math.random(1,2) == 2 then
			selected = string.upper(selected)
		end
		str = str..selected
	end
	return str
end

function Color(red,green,blue)
local color = Color3.fromRGB(red,green,blue)

return color
end

local Sticky = {}

function Sticky:CreateWindow()
local StickyHub = Instance.new("ScreenGui")
local dragPart = Instance.new("Frame")
local Background = Instance.new("ImageLabel")
local Tabs = Instance.new("Frame")
local UIListLayout = Instance.new("UIListLayout")
local UIPadding = Instance.new("UIPadding")
local UIStroke1 = Instance.new('UIStroke')
local Topbar = Instance.new("Frame")
local Title = Instance.new("TextLabel")
local Discord = Instance.new("TextButton")
local GameTitle = Instance.new("TextLabel")
local Spliter = Instance.new('Frame')
local RAHHH = {}
local Windows = {}

rs.RenderStepped:Connect(function()
UIStroke1.Color = Color(r,g,b)
end)

UIStroke1.Parent = Background
UIStroke1.Thickness = 2.5
Spliter.Name = randomString()
Spliter.BackgroundColor3 = Color3.new(0,0,0)
Spliter.Parent = GameTitle
Spliter.Size = UDim2.new(0.5,0,0.1,0)
Spliter.AnchorPoint = Vector2.new(0.5,0.5)
Spliter.Position = UDim2.new(0.5,0,0.5,0)

StickyHub.Name = randomString()
StickyHub.Parent = game:GetService('CoreGui')
StickyHub.ZIndexBehavior = 'Global'

dragPart.Name = randomString()
dragPart.Parent = StickyHub
dragPart.AnchorPoint = Vector2.new(0.5, 0.5)
dragPart.BackgroundColor3 = Color3.new(1, 1, 1)
dragPart.BackgroundTransparency = 1
dragPart.BorderSizePixel = 0
dragPart.Position = UDim2.new(0.5, 0, 0.480526328, 0)
dragPart.Size = UDim2.new(0, 550, 0, 45)
dragPart.ZIndex = 5

Background.Name = randomString()
Background.Parent = dragPart
Background.AnchorPoint = Vector2.new(0.5, 0)
Background.BackgroundColor3 = Color3.new(1, 1, 1)
Background.BorderSizePixel = 0
Background.Position = UDim2.new(0.5, 0, 0, 0)
Background.Size = UDim2.new(1, 0, 0, 450)
Background.Image = "rbxassetid://12740629971"
Background.ScaleType = Enum.ScaleType.Crop

table.insert(MainBackgrounds, dragPart)

Tabs.Name = randomString()
Tabs.Parent = Background
Tabs.AnchorPoint = Vector2.new(0, 0.5)
Tabs.BackgroundColor3 = Color3.new(0.0980392, 0.0980392, 0.0980392)
Tabs.BackgroundTransparency = 0.4000000059604645
Tabs.BorderSizePixel = 0
Tabs.Position = UDim2.new(0, 0, 0.550000012, 0)
Tabs.Size = UDim2.new(0, 125, 0.899999976, 0)

UIListLayout.Name = randomString()
UIListLayout.Parent = Tabs
UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout.Padding = UDim.new(0, 10)

UIPadding.Name = randomString()
UIPadding.Parent = Tabs
UIPadding.PaddingBottom = UDim.new(0, 10)
UIPadding.PaddingTop = UDim.new(0, 10)

Topbar.Name = randomString()
Topbar.Parent = Background
Topbar.AnchorPoint = Vector2.new(0.5, 0)
Topbar.BackgroundColor3 = Color3.new(0.0980392, 0.0980392, 0.0980392)
Topbar.BackgroundTransparency = 0.4000000059604645
Topbar.BorderSizePixel = 0
Topbar.Position = UDim2.new(0.5, 0, 0, 0)
Topbar.Size = UDim2.new(1, 0, 0, 45)
Topbar.ZIndex = 2

Title.Name = randomString()
Title.Parent = Topbar
Title.BackgroundColor3 = Color3.new(1, 1, 1)
Title.BackgroundTransparency = 1
Title.BorderSizePixel = 0
Title.Selectable = true
Title.Size = UDim2.new(0.227272734, 0, 1, 0)
Title.Font = Enum.Font.Gotham
Title.Text = "Sticky Hub   V1.00"
Title.TextColor3 = Color3.new(0.588235, 0.588235, 0.588235)
Title.TextScaled = true
Title.TextSize = 14
Title.TextWrapped = true

Discord.Name = randomString()
Discord.Parent = Topbar
Discord.AnchorPoint = Vector2.new(1, 0)
Discord.BackgroundColor3 = Color3.new(1, 1, 1)
Discord.BackgroundTransparency = 1
Discord.BorderSizePixel = 0
Discord.Position = UDim2.new(1, 0, 0, 0)
Discord.Size = UDim2.new(0.150000006, 0, 1, 0)
Discord.Font = Enum.Font.Gotham
Discord.Text = "Join Discord"
Discord.TextColor3 = Color3.new(0.588235, 0.588235, 0.588235)
Discord.TextSize = 14
Discord.TextWrapped = true

GameTitle.Name = randomString()
GameTitle.Parent = Topbar
GameTitle.AnchorPoint = Vector2.new(0.5, 0)
GameTitle.BackgroundColor3 = Color3.new(1, 1, 1)
GameTitle.BackgroundTransparency = 1
GameTitle.BorderSizePixel = 0
GameTitle.Position = UDim2.new(0.555454552, 0, 0, 0)
GameTitle.Selectable = true
GameTitle.Size = UDim2.new(0.610909104, 0, 1, 0)
GameTitle.Font = Enum.Font.Gotham
GameTitle.Text = gameName..'\n'..getgenv().supportedStatus
GameTitle.TextColor3 = Color3.new(0.588235, 0.588235, 0.588235)
GameTitle.TextScaled = true
GameTitle.TextSize = 0
GameTitle.TextWrapped = true
GameTitle.TextYAlignment = Enum.TextYAlignment.Top

        local gui = dragPart

        local dragging;
        local dragInput;
        local dragStart;
        local startPos;

        local function update(input)
        	local delta = input.Position - dragStart
        	gui.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        	PositionSet = gui.Position
        end

        gui.InputBegan:Connect(function(input)
        	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        		dragging = true
        		dragStart = input.Position
        		startPos = gui.Position
        		
        		input.Changed:Connect(function()
        			if input.UserInputState == Enum.UserInputState.End then
        				dragging = false
        			end
        		end)
        	end
        end)

        gui.InputChanged:Connect(function(input)
        	if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        		dragInput = input
        	end
        end)

        uis.InputChanged:Connect(function(input)
        	if input == dragInput and dragging then
        		update(input)
        	end
        end)

local Window = {}
function Window:CreateTab(text)
local TextButton = Instance.new("TextButton")
local ScrollingFrame = Instance.new("ScrollingFrame")
local UIGridLayout = Instance.new("UIListLayout")
local UIPadding_5 = Instance.new('UIPadding')
TextButton.Name = randomString()
TextButton.Parent = Tabs
TextButton.BackgroundColor3 = Color3.new(1, 1, 1)
TextButton.BackgroundTransparency = 1
TextButton.BorderSizePixel = 0
TextButton.Size = UDim2.new(1, 0, 0.100000001, 0)
TextButton.AutoButtonColor = false
TextButton.Font = Enum.Font.Gotham
TextButton.Text = text
TextButton.TextColor3 = Color3.new(0.352941, 0.352941, 0.352941)
TextButton.TextSize = 14
TextButton.TextWrapped = true

ScrollingFrame.Visible = false
ScrollingFrame.Name = randomString()
ScrollingFrame.Parent = Background
ScrollingFrame.AnchorPoint = Vector2.new(1, 0.5)
ScrollingFrame.BackgroundColor3 = Color3.new(0.0980392, 0.0980392, 0.0980392)
ScrollingFrame.BackgroundTransparency = 0.4000000059604645
ScrollingFrame.BorderSizePixel = 0
ScrollingFrame.Position = UDim2.new(1, 0, 0.550000012, 0)
ScrollingFrame.Selectable = false
ScrollingFrame.Size = UDim2.new(0.699999988, 0, 0.899999976, 0)
ScrollingFrame.CanvasSize = UDim2.new(0, 0, 1, 0)
ScrollingFrame.ScrollBarThickness = 0

table.insert(Windows, ScrollingFrame)
table.insert(RAHHH, TextButton)

UIPadding_5.PaddingBottom = UDim.new(0, 5)
UIPadding_5.PaddingTop = UDim.new(0,5)
UIGridLayout.Name = randomString()
UIGridLayout.Parent = ScrollingFrame
UIGridLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIGridLayout.Padding = UDim.new(0,5)

TextButton.MouseButton1Down:Connect(function()
for i,v in pairs(Windows) do
   
        v.Visible = false
end

for i,v in pairs(RAHHH) do
    v.TextColor3 = Color3.new(0.352941, 0.352941, 0.352941)
end

TextButton.TextColor3 = Color3.new(0.552941, 0.552941, 0.552941)
ScrollingFrame.Visible = true
end)

local Tab = {}
function Tab:CreateButton(text, Call)
local Button = Instance.new("Frame")
local ImageLabel_2 = Instance.new("ImageLabel")
local TextLabel_2 = Instance.new("TextLabel")
local TextButton_2 = Instance.new("TextButton")
    Button.Name = randomString()
Button.Parent = ScrollingFrame
Button.AnchorPoint = Vector2.new(0.5, 0.5)
Button.BackgroundColor3 = Color3.new(0.0980392, 0.0980392, 0.0980392)
Button.BackgroundTransparency = 0.20000000298023224
Button.BorderSizePixel = 0
Button.Position = UDim2.new(0.370129883, 0, 0, 0)
Button.Size = UDim2.new(1, 0, 0, 47)

ImageLabel_2.Name = randomString()
ImageLabel_2.Parent = Button
ImageLabel_2.AnchorPoint = Vector2.new(1, 0)
ImageLabel_2.BackgroundColor3 = Color3.new(1, 1, 1)
ImageLabel_2.BackgroundTransparency = 1
ImageLabel_2.BorderSizePixel = 0
ImageLabel_2.Position = UDim2.new(0.949999988, 0, 0.300000012, 0)
ImageLabel_2.Size = UDim2.new(0, 20, 0, 20)
ImageLabel_2.Image = "rbxassetid://10734898355"

TextLabel_2.Name = randomString()
TextLabel_2.Parent = Button
TextLabel_2.AnchorPoint = Vector2.new(0.5, 0.5)
TextLabel_2.BackgroundColor3 = Color3.new(1, 1, 1)
TextLabel_2.BackgroundTransparency = 1
TextLabel_2.Position = UDim2.new(0.5, 0, 0.5, 0)
TextLabel_2.Size = UDim2.new(0.949999988, 0, 0.5, 0)
TextLabel_2.Font = Enum.Font.Gotham
TextLabel_2.Text = text
TextLabel_2.TextColor3 = Color3.new(0.588235, 0.588235, 0.588235)
TextLabel_2.TextScaled = true
TextLabel_2.TextSize = 14
TextLabel_2.TextWrapped = true
TextLabel_2.TextXAlignment = Enum.TextXAlignment.Left

TextButton_2.Name = randomString()
TextButton_2.Parent = Button
TextButton_2.AnchorPoint = Vector2.new(0.5, 0.5)
TextButton_2.BackgroundColor3 = Color3.new(1, 1, 1)
TextButton_2.BackgroundTransparency = 1
TextButton_2.BorderSizePixel = 0
TextButton_2.Position = UDim2.new(0.5, 0, 0.5, 0)
TextButton_2.Size = UDim2.new(1, 0, 1, 0)
TextButton_2.Font = Enum.Font.SourceSans
TextButton_2.Text = ""
TextButton_2.TextColor3 = Color3.new(0, 0, 0)
TextButton_2.TextSize = 14

TextButton_2.MouseButton1Down:Connect(function()
    pcall(Call)
end)
end

function Tab:CreateDropdown(text, Options, Call)
local buttons = {}
local Dropdown = Instance.new("Frame")
local ImageLabel_4 = Instance.new("ImageLabel")
local TextLabel_5 = Instance.new("TextLabel")
local TextButton_5 = Instance.new("TextButton")
local ScrollingFrame5 = Instance.new("ScrollingFrame")
local UIGridLayout_2 = Instance.new("UIGridLayout")
local UIPadding_2 = Instance.new("UIPadding")
local Searchbar = Instance.new("Frame")
local ImageLabel_51 = Instance.new("ImageLabel")
local TextLabel_61 = Instance.new("TextBox")
local TextButton_61 = Instance.new("TextButton")

local Option = nil
Dropdown.Name = randomString()
Dropdown.Parent = ScrollingFrame
Dropdown.AnchorPoint = Vector2.new(0.5, 0.5)
Dropdown.BackgroundColor3 = Color3.new(0.0980392, 0.0980392, 0.0980392)
Dropdown.BackgroundTransparency = 0.20000000298023224
Dropdown.BorderSizePixel = 0
Dropdown.Position = UDim2.new(0.370129883, 0, 0, 0)
Dropdown.Size = UDim2.new(1, 0, 0, 47)

ImageLabel_4.Name = randomString()
ImageLabel_4.Parent = Dropdown
ImageLabel_4.AnchorPoint = Vector2.new(1, 0)
ImageLabel_4.BackgroundColor3 = Color3.new(1, 1, 1)
ImageLabel_4.BackgroundTransparency = 1
ImageLabel_4.BorderSizePixel = 0
ImageLabel_4.Position = UDim2.new(0.949999988, 0, 0.300000012, 0)
ImageLabel_4.Size = UDim2.new(0, 20, 0, 20)
ImageLabel_4.Image = "rbxassetid://10723433811"

TextLabel_5.Name = randomString()
TextLabel_5.Parent = Dropdown
TextLabel_5.AnchorPoint = Vector2.new(0.5, 0.5)
TextLabel_5.BackgroundColor3 = Color3.new(1, 1, 1)
TextLabel_5.BackgroundTransparency = 1
TextLabel_5.Position = UDim2.new(0.5, 0, 0.5, 0)
TextLabel_5.Size = UDim2.new(0.949999988, 0, 0.5, 0)
TextLabel_5.Font = Enum.Font.Gotham
TextLabel_5.Text = text
TextLabel_5.TextColor3 = Color3.new(0.588235, 0.588235, 0.588235)
TextLabel_5.TextScaled = true
TextLabel_5.TextSize = 14
TextLabel_5.TextWrapped = true
TextLabel_5.TextXAlignment = Enum.TextXAlignment.Left

TextButton_5.Name = randomString()
TextButton_5.Parent = Dropdown
TextButton_5.AnchorPoint = Vector2.new(0.5, 0.5)
TextButton_5.BackgroundColor3 = Color3.new(1, 1, 1)
TextButton_5.BackgroundTransparency = 1
TextButton_5.BorderSizePixel = 0
TextButton_5.Position = UDim2.new(0.5, 0, 0.5, 0)
TextButton_5.Size = UDim2.new(1, 0, 1, 0)
TextButton_5.Font = Enum.Font.SourceSans
TextButton_5.Text = ""
TextButton_5.TextColor3 = Color3.new(0, 0, 0)
TextButton_5.TextSize = 14

ScrollingFrame5.Name = randomString()
ScrollingFrame5.Parent = ScrollingFrame
ScrollingFrame5.Active = true
ScrollingFrame5.AnchorPoint = Vector2.new(0.5, 0)
ScrollingFrame5.BackgroundColor3 = Color3.new(1, 1, 1)
ScrollingFrame5.BackgroundTransparency = 1
ScrollingFrame5.BorderSizePixel = 0
ScrollingFrame5.Position = UDim2.new(0.5, 0, 1, 0)
ScrollingFrame5.Size = UDim2.new(1, 0, 0.2, 0)
ScrollingFrame5.ScrollBarThickness = 2
ScrollingFrame5.CanvasSize = UDim2.new(0,0,1,0)
ScrollingFrame5.AutomaticCanvasSize = 'Y'
ScrollingFrame5.Visible = false
ScrollingFrame5.ZIndex = 10

UIGridLayout_2.Name = randomString()
UIGridLayout_2.Parent = ScrollingFrame5
UIGridLayout_2.SortOrder = Enum.SortOrder.LayoutOrder
UIGridLayout_2.CellPadding = UDim2.new(0, 0, 0, 5)
UIGridLayout_2.CellSize = UDim2.new(1, 0, 0, 21)
UIPadding_2.Name = randomString()
UIPadding_2.Parent = ScrollingFrame5
UIPadding_2.PaddingTop = UDim.new(0, 5)

Searchbar.Name = randomString()
Searchbar.Parent = ScrollingFrame5
Searchbar.AnchorPoint = Vector2.new(0.5, 0.5)
Searchbar.BackgroundColor3 = Color3.new(0.0470588, 0.0470588, 0.0470588)
Searchbar.BorderSizePixel = 0
Searchbar.Position = UDim2.new(0.370129883, 0, 0, 0)
Searchbar.ZIndex = 11

ImageLabel_51.Name = randomString()
ImageLabel_51.Parent = Searchbar
ImageLabel_51.AnchorPoint = Vector2.new(1, 0.5)
ImageLabel_51.BackgroundColor3 = Color3.new(1, 1, 1)
ImageLabel_51.BackgroundTransparency = 1
ImageLabel_51.BorderSizePixel = 0
ImageLabel_51.Position = UDim2.new(0.949999988, 0, 0.5, 0)
ImageLabel_51.Size = UDim2.new(0, 20, 0, 20)
ImageLabel_51.Image = "rbxassetid://10734909196"
ImageLabel_51.ZIndex = 11

TextLabel_61.Name = randomString()
TextLabel_61.Parent = Searchbar
TextLabel_61.AnchorPoint = Vector2.new(0.5, 0.5)
TextLabel_61.BackgroundColor3 = Color3.new(1, 1, 1)
TextLabel_61.BackgroundTransparency = 1
TextLabel_61.Position = UDim2.new(0.5, 0, 0.5, 0)
TextLabel_61.Size = UDim2.new(0.949999988, 0, 0.5, 0)
TextLabel_61.Font = Enum.Font.Gotham
TextLabel_61.Text = 'Searchbar: '
TextLabel_61.TextColor3 = Color3.new(0.588235, 0.588235, 0.588235)
TextLabel_61.TextScaled = true
TextLabel_61.TextSize = 14
TextLabel_61.TextWrapped = true
TextLabel_61.TextXAlignment = Enum.TextXAlignment.Left
TextLabel_61.ZIndex = 11

TextLabel_61:GetPropertyChangedSignal('Text'):Connect(function()
    for i,v in pairs(buttons) do
        if not string.lower(v.Text):match(string.lower(TextLabel_61.Text)) then
            v.Parent.Visible = false
        else
            v.Parent.Visible = true
        end
    end
end)

TextButton_5.MouseButton1Down:Connect(function()
    ScrollingFrame5.Visible = not ScrollingFrame5.Visible
end)

for i,v in pairs(Options) do

local DropdownButton = Instance.new("Frame")
local ImageLabel_5 = Instance.new("ImageLabel")
local TextLabel_6 = Instance.new("TextLabel")
table.insert(buttons,TextLabel_6)
local TextButton_6 = Instance.new("TextButton")
DropdownButton.Name = randomString()
DropdownButton.Parent = ScrollingFrame5
DropdownButton.AnchorPoint = Vector2.new(0.5, 0.5)
DropdownButton.BackgroundColor3 = Color3.new(0.0470588, 0.0470588, 0.0470588)
DropdownButton.BorderSizePixel = 0
DropdownButton.Position = UDim2.new(0.370129883, 0, 0, 0)
DropdownButton.ZIndex = 11

ImageLabel_5.Name = randomString()
ImageLabel_5.Parent = DropdownButton
ImageLabel_5.AnchorPoint = Vector2.new(1, 0.5)
ImageLabel_5.BackgroundColor3 = Color3.new(1, 1, 1)
ImageLabel_5.BackgroundTransparency = 1
ImageLabel_5.BorderSizePixel = 0
ImageLabel_5.Position = UDim2.new(0.949999988, 0, 0.5, 0)
ImageLabel_5.Size = UDim2.new(0, 20, 0, 20)
ImageLabel_5.Image = "rbxassetid://10734898355"
ImageLabel_5.ZIndex = 11

TextLabel_6.Name = randomString()
TextLabel_6.Parent = DropdownButton
TextLabel_6.AnchorPoint = Vector2.new(0.5, 0.5)
TextLabel_6.BackgroundColor3 = Color3.new(1, 1, 1)
TextLabel_6.BackgroundTransparency = 1
TextLabel_6.Position = UDim2.new(0.5, 0, 0.5, 0)
TextLabel_6.Size = UDim2.new(0.949999988, 0, 0.5, 0)
TextLabel_6.Font = Enum.Font.Gotham
TextLabel_6.Text = v
TextLabel_6.TextColor3 = Color3.new(0.588235, 0.588235, 0.588235)
TextLabel_6.TextScaled = true
TextLabel_6.TextSize = 14
TextLabel_6.TextWrapped = true
TextLabel_6.TextXAlignment = Enum.TextXAlignment.Left
TextLabel_6.ZIndex = 11

TextButton_6.Name = randomString()
TextButton_6.Parent = DropdownButton
TextButton_6.AnchorPoint = Vector2.new(0.5, 0.5)
TextButton_6.BackgroundColor3 = Color3.new(1, 1, 1)
TextButton_6.BackgroundTransparency = 1
TextButton_6.BorderSizePixel = 0
TextButton_6.Position = UDim2.new(0.5, 0, 0.5, 0)
TextButton_6.Size = UDim2.new(1, 0, 1, 0)
TextButton_6.Font = Enum.Font.SourceSans
TextButton_6.Text = ""
TextButton_6.TextColor3 = Color3.new(0, 0, 0)
TextButton_6.TextSize = 14
TextButton_6.ZIndex = 11

TextButton_6.MouseButton1Down:Connect(function()
    Option = v
    pcall(Call, Option)
end)
    end
end

function Tab:CreateSlider(text,low,start,high,Call)
    local Sliding = false
    local Value = start or low or 0
    local maxvalue = high or 100
    local minvalue = low or 0
    
    local Slider = Instance.new("Frame")
local TextLabel_4 = Instance.new("TextLabel")
local ImageLabel_3 = Instance.new("ImageLabel")
local Slider_2 = Instance.new("Frame")
local Slider_3 = Instance.new("Frame")
local TextButton_4 = Instance.new("TextButton")
local UICorner = Instance.new('UICorner')
    Slider.Name = randomString()
Slider.Parent = ScrollingFrame
Slider.AnchorPoint = Vector2.new(0.5, 0.5)
Slider.BackgroundColor3 = Color3.new(0.0980392, 0.0980392, 0.0980392)
Slider.BackgroundTransparency = 0.3
Slider.BorderSizePixel = 0
Slider.Position = UDim2.new(0.370129883, 0, 0, 0)
Slider.Size = UDim2.new(1, 0, 0, 47)
TextLabel_4.Name = randomString()
TextLabel_4.Parent = Slider
TextLabel_4.AnchorPoint = Vector2.new(0.5, 0.5)
TextLabel_4.BackgroundColor3 = Color3.new(1, 1, 1)
TextLabel_4.BackgroundTransparency = 1
TextLabel_4.Position = UDim2.new(0.133766234, 0, 0.5, 0)
TextLabel_4.Size = UDim2.new(0.217532471, 0, 1, 0)
TextLabel_4.Font = Enum.Font.Gotham
TextLabel_4.Text = text..'\n'..tostring(Value) 
TextLabel_4.TextColor3 = Color3.new(0.588235, 0.588235, 0.588235)
TextLabel_4.TextScaled = true
TextLabel_4.TextSize = 14
TextLabel_4.TextWrapped = true
TextLabel_4.TextXAlignment = Enum.TextXAlignment.Left

ImageLabel_3.Name = randomString()
ImageLabel_3.Parent = Slider
ImageLabel_3.AnchorPoint = Vector2.new(1, 0)
ImageLabel_3.BackgroundColor3 = Color3.new(1, 1, 1)
ImageLabel_3.BackgroundTransparency = 1
ImageLabel_3.BorderSizePixel = 0
ImageLabel_3.Position = UDim2.new(0.949999988, 0, 0.300000012, 0)
ImageLabel_3.Size = UDim2.new(0, 20, 0, 20)
ImageLabel_3.Image = "rbxassetid://10734963191"

Slider_3.Name = randomString()
Slider_3.Parent = Slider
Slider_3.AnchorPoint = Vector2.new(0.5, 0.5)
Slider_3.BackgroundColor3 = Color3.new(0.2980392, 0.2980392, 0.2980392)
Slider_3.BackgroundTransparency = 1
Slider_3.BorderSizePixel = 0
Slider_3.Position = UDim2.new(0.56704545, 0, 0.5, 0)
Slider_3.Size = UDim2.new(0.612662435, 0, 1, 0)

table.insert(Sliders, Slider_2)

Slider_2.Name = randomString()
Slider_2.Parent = Slider_3
Slider_2.AnchorPoint = Vector2.new(0, 0.5)
Slider_2.BackgroundColor3 = Color(r,g,b)
Slider_2.BackgroundTransparency = 0.5
Slider_2.BorderSizePixel = 0
Slider_2.Position = UDim2.new(0, 0, 0.5, 0)
Slider_2.Size = UDim2.new(0, 0, 1, 0)
Slider_2.ZIndex = 2

TextButton_4.Name = randomString()
TextButton_4.Parent = Slider_3
TextButton_4.AnchorPoint = Vector2.new(0.5, 0.5)
TextButton_4.BackgroundColor3 = Color3.new(0, 0, 0)
TextButton_4.BorderSizePixel = 0
TextButton_4.Position = UDim2.new(0.5, 0, 0.5, 0)
TextButton_4.Size = UDim2.new(1, 0, 1, 0)
TextButton_4.Font = Enum.Font.SourceSans
TextButton_4.Text = ""
TextButton_4.TextColor3 = Color3.new(0, 0, 0)
TextButton_4.TextSize = 14
TextButton_4.BackgroundTransparency = 1

UICorner.CornerRadius = UDim.new(0,6)
UICorner.Parent = Slider_2


TextButton_4.MouseButton1Down:Connect(function()
    Value = math.floor((((tonumber(maxvalue) - tonumber(minvalue)) / 236) * Slider_2.AbsoluteSize.X) + tonumber(minvalue)) or 0
    pcall(Call, Value)
    Slider_2.Size = UDim2.new(0, math.clamp(mouse.X - Slider_2.AbsolutePosition.X, 0, 236), 0.5, 0)
    moveconnection = mouse.Move:Connect(function()
        TextLabel_4.Text = text..'\n'..tostring(Value) or 'nil'
        Value = math.floor((((tonumber(maxvalue) - tonumber(minvalue)) / 236) * Slider_2.AbsoluteSize.X) + tonumber(minvalue))
         pcall(Call, Value)
        Slider_2.Size = UDim2.new(0, math.clamp(mouse.X - Slider_2.AbsolutePosition.X, 0, 236), 0.5, 0)
    end)
    releaseconnection = uis.InputEnded:Connect(function(Mouse)
        if Mouse.UserInputType == Enum.UserInputType.MouseButton1 then
            Value = math.floor((((tonumber(maxvalue) - tonumber(minvalue)) / 236) * Slider_2.AbsoluteSize.X) + tonumber(minvalue))
            pcall(Call, Value)
            Slider_2.Size = UDim2.new(0, math.clamp(mouse.X - Slider_2.AbsolutePosition.X, 0, 236), 0.5, 0)
            moveconnection:Disconnect()
            releaseconnection:Disconnect()
        end
    end)
end)
end

function Tab:CreateSection(title)
    local Section = Instance.new("Frame")
    local TextLabel = Instance.new("TextLabel")
local ImageLabel = Instance.new("ImageLabel")

Section.Name = randomString()
Section.Parent = ScrollingFrame
Section.AnchorPoint = Vector2.new(0.5, 0.5)
Section.BackgroundColor3 = Color3.new(0.0470588, 0.0470588, 0.0470588)
Section.BackgroundTransparency = 0.30000001192092896
Section.BorderSizePixel = 0
Section.Position = UDim2.new(0.370129883, 0, 0, 0)
Section.Size = UDim2.new(1, 0, 0, 47)

TextLabel.Name = randomString()
TextLabel.Parent = Section
TextLabel.AnchorPoint = Vector2.new(0.5, 0.5)
TextLabel.BackgroundColor3 = Color3.new(1, 1, 1)
TextLabel.BackgroundTransparency = 1
TextLabel.Position = UDim2.new(0.5, 0, 0.5, 0)
TextLabel.Size = UDim2.new(0.949999988, 0, 0.5, 0)
TextLabel.Font = Enum.Font.Gotham
TextLabel.Text = title
TextLabel.TextColor3 = Color3.new(0.588235, 0.588235, 0.588235)
TextLabel.TextScaled = true
TextLabel.TextSize = 14
TextLabel.TextWrapped = true

ImageLabel.Name = randomString()
ImageLabel.Parent = Section
ImageLabel.AnchorPoint = Vector2.new(1, 0)
ImageLabel.BackgroundColor3 = Color3.new(1, 1, 1)
ImageLabel.BackgroundTransparency = 1
ImageLabel.BorderSizePixel = 0
ImageLabel.Position = UDim2.new(0.949999988, 0, 0.300000012, 0)
ImageLabel.Size = UDim2.new(0, 20, 0, 20)
ImageLabel.Image = "rbxassetid://10723384893"
end

function Tab:CreateToggle(text, StartingValue, Call)
    local Toggle = Instance.new("Frame")
    local Toggled2 = Instance.new("Frame")
    local value = StartingValue
local Toggled = Instance.new("Frame")
local TextLabel_3 = Instance.new("TextLabel")
local TextButton_3 = Instance.new("TextButton")
local UICorner = Instance.new('UICorner')
UICorner.Name = randomString()
UICorner.CornerRadius = UDim.new(0,6)
UICorner.Parent = Toggled
local UICorner2 = Instance.new('UICorner')
UICorner2.Name = randomString()
UICorner2.CornerRadius = UDim.new(0,6)
UICorner2.Parent = Toggled2

Toggle.Name = randomString()
Toggle.Parent = ScrollingFrame
Toggle.AnchorPoint = Vector2.new(0.5, 0.5)
Toggle.BackgroundColor3 = Color3.new(0.0980392, 0.0980392, 0.0980392)
Toggle.BackgroundTransparency = 0.20000000298023224
Toggle.BorderSizePixel = 0
Toggle.Position = UDim2.new(0.370129883, 0, 0, 0)
Toggle.Size = UDim2.new(1, 0, 0, 47)

Toggled.Name = randomString()
Toggled.Parent = Toggle
Toggled.AnchorPoint = Vector2.new(1, 0.5)
Toggled.BackgroundColor3 = Color3.new(1, 0, 0)
Toggled.BorderSizePixel = 0
Toggled.Position = UDim2.new(0.949999988, 0, 0.5, 0)
Toggled.Size = UDim2.new(0, 20, 0, 20)
Toggled.ZIndex = 2

TextLabel_3.Name = randomString()
TextLabel_3.Parent = Toggle
TextLabel_3.AnchorPoint = Vector2.new(0.5, 0.5)
TextLabel_3.BackgroundColor3 = Color3.new(1, 1, 1)
TextLabel_3.BackgroundTransparency = 1
TextLabel_3.Position = UDim2.new(0.5, 0, 0.5, 0)
TextLabel_3.Size = UDim2.new(0.949999988, 0, 0.5, 0)
TextLabel_3.Font = Enum.Font.Gotham
TextLabel_3.Text = text
TextLabel_3.TextColor3 = Color3.new(0.588235, 0.588235, 0.588235)
TextLabel_3.TextScaled = true
TextLabel_3.TextSize = 14
TextLabel_3.TextWrapped = true
TextLabel_3.TextXAlignment = Enum.TextXAlignment.Left

TextButton_3.Name = randomString()
TextButton_3.Parent = Toggle
TextButton_3.AnchorPoint = Vector2.new(0.5, 0.5)
TextButton_3.BackgroundColor3 = Color3.new(1, 1, 1)
TextButton_3.BackgroundTransparency = 1
TextButton_3.BorderSizePixel = 0
TextButton_3.Position = UDim2.new(0.5, 0, 0.5, 0)
TextButton_3.Size = UDim2.new(1, 0, 1, 0)
TextButton_3.Font = Enum.Font.SourceSans
TextButton_3.Text = ""
TextButton_3.TextColor3 = Color3.new(0, 0, 0)
TextButton_3.TextSize = 14
TextButton_3.ZIndex = 5

TextButton_3.MouseButton1Down:Connect(function()
    value = not value 
    if value then
        Toggled.BackgroundColor3 = Color3.new(0, 1, 0)
    else
        Toggled.BackgroundColor3 = Color3.new(1, 0, 0)
    end
     pcall(Call, value)
end)
end
return Tab
end
return Window
end

function getPlr()
    local dist, targ = math.huge
    for i,v in next, game.Players:GetChildren() do
        if v.Character:IsA('Model') and v.Character:FindFirstChild('Humanoid') and v.Character.Humanoid.Health > 0 and v.Character:FindFirstChild('HumanoidRootPart') and v ~= plr then
            local mag = (root.Position - v.Character.HumanoidRootPart.Position).magnitude
            if dist > mag then
                dist = mag
                targ = v
            end
        end
    end
    return targ
end

function pressKey(Key,holdTime)
vim:SendKeyEvent(true, Key,false,game)
wait(holdTime)
vim:SendKeyEvent(false, Key,false,game)
end

function pressMB(x,y,mb, holdTime)
vim:SendMouseButtonEvent(x,y, mb, true, game, 1)
wait(holdTime)
vim:SendMouseButtonEvent(x,y, mb, false, game, 1)
end

function loadLocal(window)

end

function CreateEsp(Object)
if Object ~= plr then
local esp = {} 
    
esp.Box = Drawing.new('Square');
esp.Box.Filled = false;
esp.Box.Visible = false;
esp.Box.Thickness = 2;

esp.Healthbar = Drawing.new('Square');
esp.Healthbar.Filled = true;
esp.Healthbar.Visible = false;
esp.Healthbar.Thickness = 1;

esp.HealthbarBack = Drawing.new('Square');
esp.HealthbarBack.Filled = true;
esp.HealthbarBack.Visible = false;
esp.HealthbarBack.Thickness = 1;

esp.HealthbarOutline = Drawing.new('Square');
esp.HealthbarOutline.Filled = false;
esp.HealthbarOutline.Visible = false;
esp.HealthbarOutline.Thickness = 2;

esp.Distance = Drawing.new('Text');
esp.Distance.Size = 14;
esp.Distance.Center = true;
esp.Distance.Outline = true;
esp.Distance.Visible = false;

esp.pName = Drawing.new('Text');
esp.pName.Size = 14;
esp.pName.Center = true;
esp.pName.Outline = true;
esp.pName.Visible = false;

ESPs[Object] = esp;
    end
end

function UpdateEsp()

for player,esp in pairs(ESPs) do 
    if espValue then
    if player.Character ~= nil and player.Character:FindFirstChild('HumanoidRootPart') and plr.Character ~= nil and plr.Character:FindFirstChild('HumanoidRootPart') and plr.Character:FindFirstChild('Humanoid') and plr.Character.Humanoid.Health ~= 0 then
    local PlayerPos, Visibility = wtvp(CC, player.Character.HumanoidRootPart.Position);
    local HeadPosition = wtvp(CC, player.Character.HumanoidRootPart.Position + Vector3.new(0, 5, 0));
    local LegPosition = wtvp(CC, player.Character.HumanoidRootPart.Position - Vector3.new(0,2.5,0));
    local scalefactor = 1 / (PlayerPos.Z * math.tan(math.rad(CC.FieldOfView * 0.5)) * 2) * 100;
    local width, height = math.floor(50 * scalefactor), math.floor(90 * scalefactor);
    if EspTypes.Box then
        esp.Box.Position = Vector2.new(PlayerPos.X - esp.Box.Size.X / 2, PlayerPos.Y - esp.Box.Size.Y / 2);
        esp.Box.Size = Vector2.new((1000 / PlayerPos.Z) * 4, HeadPosition.Y - LegPosition.Y);
        esp.Box.Visible = Visibility;
        esp.Box.Color = Color(r,g,b)
    else
        esp.Box.Visible = false;
    end    
    if EspTypes.HealthBar then
        esp.Healthbar.Position = Vector2.new(esp.Box.Position.X - esp.Healthbar.Size.X ,PlayerPos.Y - esp.Box.Size.Y / 2);
        esp.Healthbar.Size = Vector2.new(6, ((HeadPosition.Y - LegPosition.Y) * (player.Character.Humanoid.Health / player.Character.Humanoid.MaxHealth)));
        esp.Healthbar.Visible = Visibility;
        esp.Healthbar.Color = (Color3.fromRGB(255 - 255 / (game:GetService("Players")[player.Name].Character:WaitForChild('Humanoid').MaxHealth / game:GetService("Players")[player.Name].Character:WaitForChild('Humanoid').Health), 255 / (game:GetService("Players")[player.Name].Character:WaitForChild('Humanoid').MaxHealth / game:GetService("Players")[player.Name].Character:WaitForChild('Humanoid').Health), 0))
        esp.Healthbar.ZIndex = 2
        
        esp.HealthbarBack.Position = Vector2.new(esp.Box.Position.X - esp.Healthbar.Size.X ,PlayerPos.Y - esp.Box.Size.Y / 2);
        esp.HealthbarBack.Size = Vector2.new(6, HeadPosition.Y - LegPosition.Y);
        esp.HealthbarBack.Visible = Visibility;
        esp.HealthbarBack.Color = Color(r,g,b)
        
        esp.HealthbarOutline.Position = Vector2.new(esp.Box.Position.X - esp.HealthbarOutline.Size.X,PlayerPos.Y - esp.Box.Size.Y / 2);
        esp.HealthbarOutline.Size = Vector2.new(6, HeadPosition.Y - LegPosition.Y);
        esp.HealthbarOutline.Visible = Visibility;
        esp.HealthbarOutline.Color = Color(r,g,b)
    else
        esp.Healthbar.Visible = false;
        esp.HealthbarBack.Visible = false;
        esp.HealthbarOutline.Visible = false;
    end
    if EspTypes.Distance then
        esp.Distance.Position = Vector2.new(PlayerPos.X, math.floor(PlayerPos.Y + height / 2));
        esp.Distance.Visible = Visibility;
        esp.Distance.Text = tostring(math.floor((player.Character:WaitForChild('HumanoidRootPart').Position - plr.Character:WaitForChild('HumanoidRootPart').Position).Magnitude))..'m';
        esp.Distance.Color = Color(r,g,b);
        esp.Distance.OutlineColor = Color(255 - r,255 - g, 255 - b)
        
    else
        esp.Distance.Visible = false
    end   
        esp.pName.Position = Vector2.new(PlayerPos.X, math.floor(PlayerPos.Y - height / 2 - esp.pName.TextBounds.Y));
        esp.pName.Visible = Visibility;
        esp.pName.Text = player.Name;
        esp.pName.Color = Color(r,g,b);
        esp.pName.OutlineColor = Color(255 - r,255 - g, 255 - b);
    else
        esp.Box.Visible = false;
        esp.Distance.Visible = false;
        esp.pName.Visible = false;
        esp.Healthbar.Visible = false;
        esp.HealthbarOutline.Visible = false;
        esp.HealthbarBack.Visible = false;
    end
    else
        esp.Box.Visible = false;
        esp.Distance.Visible = false;
        esp.pName.Visible = false;
        esp.Healthbar.Visible = false;
        esp.HealthbarOutline.Visible = false;
        esp.HealthbarBack.Visible = false;
    end
end
end

function RemoveEsp(Object)
if ESPs[Object] ~= nil then
    for bing, bong in pairs(ESPs[Object]) do
        bong.Visible = false;
    end
    ESPs[Object] = nil;
    end
end

for i,v in pairs(game.Players:GetPlayers()) do
CreateEsp(v)
end
game.Players.PlayerAdded:Connect(CreateEsp)
game.Players.PlayerRemoving:Connect(RemoveEsp)
rs.RenderStepped:Connect(UpdateEsp)

function loadVisual(window)
    
local Visual = window:CreateTab('Visual')
local ESPSect = Visual:CreateSection('ESP')
local ESPTog = Visual:CreateToggle('Player ESP', false, function(Value)
    espValue = Value
end)
local BoxTog = Visual:CreateToggle('Box ESP', false, function(Value)
    EspTypes.Box = Value
end)
local HealthTog = Visual:CreateToggle('Healthbar', false, function(Value)
    EspTypes.HealthBar = Value
end)
local DistanceTog = Visual:CreateToggle('Distance', false, function(Value)
    EspTypes.Distance = Value
end)


local Spectate = Visual:CreateSection('Spectate')
local Spec = Visual:CreateButton('Spectate Gui', function()

local SpectateGui = Instance.new("ScreenGui")
local dragPart = Instance.new("Frame")
local Background = Instance.new("ImageLabel")
local UIListLayout = Instance.new("UIListLayout")
local UIPadding = Instance.new("UIPadding")
local UIStroke1 = Instance.new('UIStroke')
local Topbar = Instance.new("Frame")
local Title = Instance.new("TextLabel")
local Close = Instance.new("TextButton")
local GameTitle = Instance.new("TextLabel")
local Spliter = Instance.new('Frame')
local PlayerList = Instance.new('ScrollingFrame')


rs.RenderStepped:Connect(function()
UIStroke1.Color = Color(r,g,b)
end)

table.insert(MainBackgrounds, dragPart)

UIStroke1.Parent = Background
UIStroke1.Thickness = 2.5

PlayerList.Name = randomString()
PlayerList.Parent = Background
PlayerList.AnchorPoint = Vector2.new(0, 0.5)
PlayerList.BackgroundColor3 = Color3.new(0.0980392, 0.0980392, 0.0980392)
PlayerList.BackgroundTransparency = 0.4000000059604645
PlayerList.BorderSizePixel = 0
PlayerList.Position = UDim2.new(0, 0, 0.550000012, 0)
PlayerList.Size = UDim2.new(1, 0, 0.899999976, 0)
PlayerList.AutomaticCanvasSize = 'Y'
PlayerList.Visible = true
PlayerList.ZIndex = 10

Spliter.Name = randomString()
Spliter.BackgroundColor3 = Color3.new(0,0,0)
Spliter.Parent = GameTitle
Spliter.Size = UDim2.new(0.5,0,0.1,0)
Spliter.AnchorPoint = Vector2.new(0.5,0.5)
Spliter.Position = UDim2.new(0.5,0,0.5,0)

SpectateGui.Name = randomString()
SpectateGui.Parent = game:GetService('CoreGui')
SpectateGui.ZIndexBehavior = 'Global'

dragPart.Name = randomString()
dragPart.Parent = SpectateGui
dragPart.AnchorPoint = Vector2.new(0.5, 0.5)
dragPart.BackgroundColor3 = Color3.new(1, 1, 1)
dragPart.BackgroundTransparency = 1
dragPart.BorderSizePixel = 0
dragPart.Position = UDim2.new(0.5, 0, 0.480526328, 0)
dragPart.Size = UDim2.new(0, 550, 0, 45)
dragPart.ZIndex = 5

Background.Name = randomString()
Background.Parent = dragPart
Background.AnchorPoint = Vector2.new(0.5, 0)
Background.BackgroundColor3 = Color3.new(1, 1, 1)
Background.BorderSizePixel = 0

Background.Position = UDim2.new(0.5,0,0,0)
Background.Size = UDim2.new(1, 0, 0, 450)
Background.Image = "rbxassetid://12740629971"
Background.ScaleType = Enum.ScaleType.Crop

Topbar.Name = randomString()
Topbar.Parent = Background
Topbar.AnchorPoint = Vector2.new(0.5, 0)
Topbar.BackgroundColor3 = Color3.new(0.0980392, 0.0980392, 0.0980392)
Topbar.BackgroundTransparency = 0.4000000059604645
Topbar.BorderSizePixel = 0
Topbar.Position = UDim2.new(0.5, 0, 0, 0)
Topbar.Size = UDim2.new(1, 0, 0, 45)
Topbar.ZIndex = 2

Title.Name = randomString()
Title.Parent = Topbar
Title.BackgroundColor3 = Color3.new(1, 1, 1)
Title.BackgroundTransparency = 1
Title.BorderSizePixel = 0
Title.Selectable = true
Title.Size = UDim2.new(0.227272734, 0, 1, 0)
Title.Font = Enum.Font.Gotham
Title.Text = "Spectate GUI"
Title.TextColor3 = Color3.new(0.588235, 0.588235, 0.588235)
Title.TextScaled = true
Title.TextSize = 14
Title.TextWrapped = true

Close.Name = randomString()
Close.Parent = Topbar
Close.AnchorPoint = Vector2.new(0.7, 0)
Close.BackgroundColor3 = Color3.new(1, 1, 1)
Close.BackgroundTransparency = 1
Close.BorderSizePixel = 0
Close.Position = UDim2.new(1, 0, 0, 0)
Close.Size = UDim2.new(0.150000006, 0, 1, 0)
Close.Font = Enum.Font.Gotham
Close.Text = "X"
Close.TextColor3 = Color3.new(0.588235, 0.588235, 0.588235)
Close.TextSize = 25
Close.TextWrapped = true

GameTitle.Name = randomString()
GameTitle.Parent = Topbar
GameTitle.AnchorPoint = Vector2.new(0.5, 0)
GameTitle.BackgroundColor3 = Color3.new(1, 1, 1)
GameTitle.BackgroundTransparency = 1
GameTitle.BorderSizePixel = 0
GameTitle.Position = UDim2.new(0.555454552, 0, 0, 0)
GameTitle.Selectable = true
GameTitle.Size = UDim2.new(0.610909104, 0, 1, 0)
GameTitle.Font = Enum.Font.Gotham
GameTitle.Text = gameName..'\n'..getgenv().supportedStatus
GameTitle.TextColor3 = Color3.new(0.588235, 0.588235, 0.588235)
GameTitle.TextScaled = true
GameTitle.TextSize = 0
GameTitle.TextWrapped = true
GameTitle.TextYAlignment = Enum.TextYAlignment.Top

UIListLayout.Name = randomString()
UIListLayout.Parent = PlayerList
UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout.Padding = UDim.new(0, 10)

UIPadding.Name = randomString()
UIPadding.Parent = PlayerList
UIPadding.PaddingBottom = UDim.new(0, 10)
UIPadding.PaddingTop = UDim.new(0, 10)

game.Players.PlayerRemoving:Connect(function(PlayerRemoved)
    if CurrentSpec == PlayerRemoved.Name then
        CurrentSpec = nil
    end
for i,v in next,(PlayerListHolder) do
    print(PlayerRemoved)
    print(v.Parent)
    print(v.Text..'  2')
    if v.Parent ~= nil and v.Text == PlayerRemoved.Name then
        print()
        v.Parent:Destroy()
        table.remove(PlayerListHolder, i)
        break
        end
    end
end)

game.Players.PlayerAdded:Connect(function(v)
if v ~= plr then
local Button = Instance.new("Frame")
local ImageLabel_2 = Instance.new("ImageLabel")
local TextLabel_2 = Instance.new("TextLabel")
local TextButton_2 = Instance.new("TextButton")

table.insert(PlayerListHolder, TextLabel_2)
    Button.Name = randomString()
Button.Parent = PlayerList
Button.AnchorPoint = Vector2.new(0.5, 0.5)
Button.BackgroundColor3 = Color3.new(0.0980392, 0.0980392, 0.0980392)
Button.BackgroundTransparency = 0.20000000298023224
Button.BorderSizePixel = 0
Button.Position = UDim2.new(0.370129883, 0, 0, 0)
Button.Size = UDim2.new(1, 0, 0, 47)

ImageLabel_2.Name = randomString()
ImageLabel_2.Parent = Button
ImageLabel_2.AnchorPoint = Vector2.new(1, 0)
ImageLabel_2.BackgroundColor3 = Color3.new(1, 1, 1)
ImageLabel_2.BackgroundTransparency = 1
ImageLabel_2.BorderSizePixel = 0
ImageLabel_2.Position = UDim2.new(0.949999988, 0, 0.300000012, 0)
ImageLabel_2.Size = UDim2.new(0, 20, 0, 20)
ImageLabel_2.Image = "rbxassetid://10734898355"

TextLabel_2.Name = randomString()
TextLabel_2.Parent = Button
TextLabel_2.AnchorPoint = Vector2.new(0.5, 0.5)
TextLabel_2.BackgroundColor3 = Color3.new(1, 1, 1)
TextLabel_2.BackgroundTransparency = 1
TextLabel_2.Position = UDim2.new(0.5, 0, 0.5, 0)
TextLabel_2.Size = UDim2.new(0.949999988, 0, 0.5, 0)
TextLabel_2.Font = Enum.Font.Gotham
TextLabel_2.Text = v.Name
TextLabel_2.TextColor3 = Color3.new(0.588235, 0.588235, 0.588235)
TextLabel_2.TextScaled = true
TextLabel_2.TextSize = 14
TextLabel_2.TextWrapped = true
TextLabel_2.TextXAlignment = Enum.TextXAlignment.Left

TextButton_2.Name = randomString()
TextButton_2.Parent = Button
TextButton_2.AnchorPoint = Vector2.new(0.5, 0.5)
TextButton_2.BackgroundColor3 = Color3.new(1, 1, 1)
TextButton_2.BackgroundTransparency = 1
TextButton_2.BorderSizePixel = 0
TextButton_2.Position = UDim2.new(0.5, 0, 0.5, 0)
TextButton_2.Size = UDim2.new(1, 0, 1, 0)
TextButton_2.Font = Enum.Font.SourceSans
TextButton_2.Text = ""
TextButton_2.TextColor3 = Color3.new(0, 0, 0)
TextButton_2.TextSize = 14

TextButton_2.MouseButton1Down:Connect(function()
if v ~= CurrentSpec and v ~= nil and v.Character ~= nil and v.Character:FindFirstChild('Humanoid') then
    CurrentSpec = v
    workspace.Camera.CameraSubject = v.Character.Humanoid
elseif v == CurrentSpec and v ~= nil and v.Character ~= nil and v.Character:FindFirstChild('Head') or v.Character:FindFirstChild('Humanoid') then
    CurrentSpec = nil
    workspace.Camera.CameraSubject = plr.Character.Humanoid 
    end
end)
end

Close.MouseButton1Down:Connect(function()
    for i,GUI in next,(MainBackgrounds) do
        if GUI == SpectateGui then
            table.remove(MainBackgrounds, i)
            break;
        end
    end
    SpectateGui:Destroy()
end)

        local gui = dragPart

        local dragging;
        local dragInput;
        local dragStart;
        local startPos;

        local function update(input)
        	local delta = input.Position - dragStart
        	gui.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end

        gui.InputBegan:Connect(function(input)
        	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        		dragging = true
        		dragStart = input.Position
        		startPos = gui.Position
        		
        		input.Changed:Connect(function()
        			if input.UserInputState == Enum.UserInputState.End then
        				dragging = false
        			end
        		end)
        	end
        end)

        gui.InputChanged:Connect(function(input)
        	if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        		dragInput = input
        	end
        end)

        uis.InputChanged:Connect(function(input)
        	if input == dragInput and dragging then
        		update(input)
        	end
        end)
end)

for i,v in pairs(game.Players:GetPlayers()) do
if v ~= plr then
local Button = Instance.new("Frame")
local ImageLabel_2 = Instance.new("ImageLabel")
local TextLabel_2 = Instance.new("TextLabel")
local TextButton_2 = Instance.new("TextButton")
    Button.Name = randomString()
Button.Parent = PlayerList
Button.AnchorPoint = Vector2.new(0.5, 0.5)
Button.BackgroundColor3 = Color3.new(0.0980392, 0.0980392, 0.0980392)
Button.BackgroundTransparency = 0.20000000298023224
Button.BorderSizePixel = 0
Button.Position = UDim2.new(0.370129883, 0, 0, 0)
Button.Size = UDim2.new(1, 0, 0, 47)

table.insert(PlayerListHolder, TextLabel_2)

ImageLabel_2.Name = randomString()
ImageLabel_2.Parent = Button
ImageLabel_2.AnchorPoint = Vector2.new(1, 0)
ImageLabel_2.BackgroundColor3 = Color3.new(1, 1, 1)
ImageLabel_2.BackgroundTransparency = 1
ImageLabel_2.BorderSizePixel = 0
ImageLabel_2.Position = UDim2.new(0.949999988, 0, 0.300000012, 0)
ImageLabel_2.Size = UDim2.new(0, 20, 0, 20)
ImageLabel_2.Image = "rbxassetid://10734898355"

TextLabel_2.Name = randomString()
TextLabel_2.Parent = Button
TextLabel_2.AnchorPoint = Vector2.new(0.5, 0.5)
TextLabel_2.BackgroundColor3 = Color3.new(1, 1, 1)
TextLabel_2.BackgroundTransparency = 1
TextLabel_2.Position = UDim2.new(0.5, 0, 0.5, 0)
TextLabel_2.Size = UDim2.new(0.949999988, 0, 0.5, 0)
TextLabel_2.Font = Enum.Font.Gotham
TextLabel_2.Text = v.Name
TextLabel_2.TextColor3 = Color3.new(0.588235, 0.588235, 0.588235)
TextLabel_2.TextScaled = true
TextLabel_2.TextSize = 14
TextLabel_2.TextWrapped = true
TextLabel_2.TextXAlignment = Enum.TextXAlignment.Left

TextButton_2.Name = randomString()
TextButton_2.Parent = Button
TextButton_2.AnchorPoint = Vector2.new(0.5, 0.5)
TextButton_2.BackgroundColor3 = Color3.new(1, 1, 1)
TextButton_2.BackgroundTransparency = 1
TextButton_2.BorderSizePixel = 0
TextButton_2.Position = UDim2.new(0.5, 0, 0.5, 0)
TextButton_2.Size = UDim2.new(1, 0, 1, 0)
TextButton_2.Font = Enum.Font.SourceSans
TextButton_2.Text = ""
TextButton_2.TextColor3 = Color3.new(0, 0, 0)
TextButton_2.TextSize = 14

TextButton_2.MouseButton1Down:Connect(function()
if v ~= CurrentSpec and v ~= nil and v.Character ~= nil and v.Character:FindFirstChild('Humanoid') then
    CurrentSpec = v
    workspace.Camera.CameraSubject = v.Character.Humanoid
elseif v == CurrentSpec and v ~= nil and v.Character ~= nil and v.Character:FindFirstChild('Humanoid') then
    CurrentSpec = nil
    workspace.Camera.CameraSubject = plr.Character.Humanoid
    end
end)
end
end

Close.MouseButton1Down:Connect(function()
    SpectateGui:Destroy()
end)

        local gui = dragPart

        local dragging;
        local dragInput;
        local dragStart;
        local startPos;

        local function update(input)
        	local delta = input.Position - dragStart
        	gui.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end

        gui.InputBegan:Connect(function(input)
        	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        		dragging = true
        		dragStart = input.Position
        		startPos = gui.Position
        		
        		input.Changed:Connect(function()
        			if input.UserInputState == Enum.UserInputState.End then
        				dragging = false
        			end
        		end)
        	end
        end)

        gui.InputChanged:Connect(function(input)
        	if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        		dragInput = input
        	end
        end)

        uis.InputChanged:Connect(function(input)
        	if input == dragInput and dragging then
        		update(input)
        	end
        end)
        

end)
return Visual
end
function loadSettings(window)
local settings = window:CreateTab('Settings')
local SliderColor = settings:CreateSection('Slider / ESP Colors')
local Red = settings:CreateSlider('Red',1,255,function(Value)
    r = Value
    for i,v in pairs(Sliders) do
        v.BackgroundColor3 = Color(r,g,b)
    end
end)
local Green = settings:CreateSlider('Green',1,255,function(Value)
    g = Value
    for i,v in pairs(Sliders) do
        v.BackgroundColor3 = Color(r,g,b)
    end
end)
local Blue = settings:CreateSlider('Blue',1,255,function(Value)
    b = Value
    for i,v in pairs(Sliders) do
        v.BackgroundColor3 = Color(r,g,b)
    end
end)

local CloseSect = settings:CreateSection('Destroy GUI')
local Close = settings:CreateButton('Close GUI', function()
for i,v in pairs(MainBackgrounds) do
    table.remove(MainBackgrounds, i)
    v.Parent:Destroy()
        end
    end)
    return settings
end
 
uis.InputBegan:Connect(function(input, Processed)
if input.KeyCode == Enum.KeyCode.RightControl and not Processed then
    for i,v in pairs(MainBackgrounds) do
        v.Visible = not v.Visible
        end
    end
end)

return Sticky
